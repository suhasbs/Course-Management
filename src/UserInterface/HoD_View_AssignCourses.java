/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import DatabaseClasses.Course;
import DatabaseClasses.Faculty;
import DatabaseClasses.Student;
import static UserInterface.Student_View_Courses.coursesTaken_copy;
import com.firebase.client.ChildEventListener;
import com.firebase.client.DataSnapshot;
import com.firebase.client.Firebase;
import com.firebase.client.FirebaseError;
import com.firebase.client.Query;
import com.firebase.client.ValueEventListener;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Suhas
 */
public class HoD_View_AssignCourses extends javax.swing.JFrame {

    /**
     * Creates new form HoD_View_AssignCourses
     */
    public HoD_View_AssignCourses() {
        initComponents();
        String a[] = {"Abc", "Def"};
        allFaculty = new ArrayList();
        courseList = new ArrayList();
        //jComboBox1.setModel(new DefaultComboBoxModel(a));
        this.populateComboBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Select Course:");

        jLabel2.setText("Assign Faculty:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jButton1.setText("Assign");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox4, 0, 131, Short.MAX_VALUE)
                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(68, 68, 68))
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //jComboBox1.getSelectedItem().toString()
        String course = jComboBox1.getSelectedItem().toString();
        String fac1, fac2, fac3;
        fac1 = jComboBox2.getSelectedItem().toString();
        fac2 = jComboBox3.getSelectedItem().toString();
        fac3 = jComboBox4.getSelectedItem().toString();
        ArrayList<Faculty> faculty = new ArrayList();
        for(Faculty f: allFaculty)
        {
            System.out.println(f.toString());
            if(f.getFacultyName().equals(fac1) || f.getFacultyName().equals(fac2) || f.getFacultyName().equals(fac3))
            faculty.add(f);
            
        }
        System.out.println("Fac selected"+faculty);
        System.out.println("Submit clicked");    
    String url = "https://course-management-3edd4.firebaseio.com/";
    Firebase dataRef = new Firebase(url);
    Firebase students = dataRef.child("Courses");
    Query queryRef = students.orderByChild("courseName");//.equalTo("Aditya A");
    System.out.println("Here");
    //System.out.println(queryRef);    
    queryRef.addListenerForSingleValueEvent(new ValueEventListener() {
    @Override
    public void onDataChange(DataSnapshot snapshot) {
        // do some stuff once
        Course c;
         for (DataSnapshot postSnapshot: snapshot.getChildren()){
            c = postSnapshot.getValue(Course.class);
            if(c.getCourseName().equals(course))
            {
                System.out.println("Course Found:");
            //s.setCoursesTaken(coursesTaken_copy);
            postSnapshot.getRef().child("faculty").setValue(faculty);
             break;
            }
        }
       
    }
    @Override
    public void onCancelled(FirebaseError firebaseError) {
    }
});
   
    
    Firebase facultyRef = dataRef.child("Faculty");
    Query queryRef1 = facultyRef.orderByChild("facultyName");//.equalTo("Aditya A");
    
    System.out.println("Here");
    //System.out.println(queryRef);    
    queryRef1.addListenerForSingleValueEvent(new ValueEventListener() {
    @Override
    public void onDataChange(DataSnapshot snapshot) {
        // do some stuff once
        Course c = new Course();
        int i=1;
        if(i==1)
        for(Course cs: courseList)
        {
        if(cs.getCourseName().equals(course))
        {c=cs;i++;break;}
        }
        Faculty f;
         for (DataSnapshot postSnapshot: snapshot.getChildren()){
            f = postSnapshot.getValue(Faculty.class);
            ArrayList<Course> cHan = new ArrayList();
            cHan = f.getCoursesHandled();
            for(Faculty x: faculty)
            
            if(f.getFacultyName().equals(x.getFacultyName()))
            {
                System.out.println("Fac Found:");
            //s.setCoursesTaken(coursesTaken_copy);
            cHan.add(c);
            //f.setCoursesHandled(cHan);
            postSnapshot.getRef().child("coursesHandled").setValue(cHan);
             break;
            }
        }
       
    }
    @Override
    public void onCancelled(FirebaseError firebaseError) {
    }
});
    
    
    
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoD_View_AssignCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoD_View_AssignCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoD_View_AssignCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoD_View_AssignCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoD_View_AssignCourses().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
    private ArrayList<Faculty> allFaculty;
    private ArrayList<Course> courseList;
    
    private void populateComboBoxes()
    {
    String url = "https://course-management-3edd4.firebaseio.com/";
    Firebase dataRef = new Firebase(url);
    Firebase courses = dataRef.child("Courses");
    Query queryRef = courses.orderByChild("courseName");
    ArrayList allCourses = new ArrayList();
    allCourses.add("Select Course");
    queryRef.addChildEventListener(new ChildEventListener() {
    @Override
    public void onChildAdded(DataSnapshot snapshot, String previousChild) {
        Course c = snapshot.getValue(Course.class);
        //System.out.println(snapshot.getKey() + " is " + s.studentName + " "+s.coursesTaken);
        courseList.add(c);
        allCourses.add(c.getCourseName());
        System.out.println(allCourses);
        jComboBox1.setModel(new DefaultComboBoxModel(allCourses.toArray()));
        
    
}

        @Override
        public void onChildChanged(DataSnapshot ds, String string) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void onChildRemoved(DataSnapshot ds) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void onChildMoved(DataSnapshot ds, String string) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void onCancelled(FirebaseError fe) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    });
    
    
    
  
    Firebase fac = dataRef.child("Faculty");
    Query queryRef1 = fac.orderByChild("facultyName");
    ArrayList allFac = new ArrayList();
    allFac.add("Select Faculty");
    queryRef1.addChildEventListener(new ChildEventListener() {
    @Override
    public void onChildAdded(DataSnapshot snapshot, String previousChild) {
        Faculty f = snapshot.getValue(Faculty.class);
        allFaculty.add(f);
        //System.out.println(snapshot.getKey() + " is " + s.studentName + " "+s.coursesTaken);
        allFac.add(f.getFacultyName());
        System.out.println(allFac);
        jComboBox2.setModel(new DefaultComboBoxModel(allFac.toArray()));
        jComboBox3.setModel(new DefaultComboBoxModel(allFac.toArray()));
        jComboBox4.setModel(new DefaultComboBoxModel(allFac.toArray()));
        
    
}

        @Override
        public void onChildChanged(DataSnapshot ds, String string) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void onChildRemoved(DataSnapshot ds) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void onChildMoved(DataSnapshot ds, String string) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void onCancelled(FirebaseError fe) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    });
    
    
    
    }
    
    
    
    
}
